常用命令记录：

VI的三种模式  1，命令模式   2，输入模式   3，末行模式

命令         执行的操作                 记忆方法
:q           退出                       quit
:w          　存盘                      write
:e           打开新文件
:r           读取文件到VI                read
:!           强行
:set nu      显示行号                 number
:set nonu    隐藏行号                no number
 
h     j     k     l
左    下    上    右
 
Ctrl + f       翻到下一页（向前翻页）     front
Ctrl + b       翻到上一页（向后翻页）     back
Ctrl + u       向前翻半页
Ctrl + d       向后翻半页
 
^              移到行头          往上就到行头了（象形）
$              移到行尾          写完一行就要给一行的钱
w              下一个单词         word
b              前一个单词         behind（在。。。后面）
e              下一单词尾         end
#G             跳到某一行        大哥(G)说到哪就到哪
i              光标前插入         insert
a              光标后加入         add
A              在行末加入   在一个词后是小a,一个行后就是大A
o           另起一行加入  一个小鸡蛋（小o）掉下来了摔开了花
O          上一行加入       吐一个大泡泡（大O）飞上去破了
  
－－－－－－－－－－ c（吃掉）代表行内删除－－－－－－－－
cw        删除一个单词（一部分不包括空格）  吃掉一个 word
c$       删除一行到行尾      刚写的一行被删了，钱也拿不到了
c^       删除一行到行头         往上吃，一直吃到头         
x        删除一个字符           看你不爽就打上“x”
 
－－－－－－－－－－ d 代表删除－－－－－－－－－－－－－－
dd          删除一行              del dir
dw          删除单词到尾部（包括空格）     del word
de          删除单词到尾部（不包括尾部空格） del end
d$          删除当前到行尾的所有字符      del $(代表尾部)
d^          删除当前到行首的所有字符      del ^(代表行首)
J    合并当前行    一个大钩子(J)把下面的一行拉到自己行尾
u    撤销上次操作           undo
U  撤销当前行所有操作  事情闹大了，得有个更大的UNDO才能恢复
Ctrl + r    恢复undo 前            recover
 
VI中的多行删除
单行删除：1（待删除行）d
多行删除：1,10d
光标所在行，dd
光标所在行以下的N行，Ndd
 
－－－－－－－－－ y 代表复制到缓存中－－－－－－－－－－－
yy           复制当前行整行的内容到vi缓冲区 
yw           复制当前光标到单词尾字符的内容到vi缓冲区
y$           复制当前光标到行尾的内容到vi缓冲区
y^           复制当前光标到行首的内容到vi缓冲区
p            读取vi缓冲区中的内容，并粘贴到光标当前的位置（不覆盖文件已有的内容）
 
/word       从上而下查           /是从上而下写的吧
?word       从下而上查找     字符在哪儿呢（？）回头找找吧
n           定位下一个匹配的   相当于向下查找下一个 next
N          定位上一个匹配的     相当于向上查找上一个
 
:s/1/2    搜索当前行第一个1并用2代替      search
:s/1/2/g  搜索当前行所有的1并用2代替      global
:#,#s/1/2/g    在#,#间搜索所有1并用2替换
:%s/1/2/g      在整个文档中将1替换为2     100％（全部）
:s/1/2/c    每次替换都给出提示确认        cue提示
 
vim 1.txt 2.txt 3.txt  同时打开多个文档
:args  显示多文件信息(会在末行提示当前打开了哪些档)     are globals
:next             切换到下一个文件
:prev             切换到上一个文件
:first            定位首文件
:last             定位尾文件
Ctrl + ^          快速切换到编辑器中切换前的文件


常用终端快捷键
Ctrl+r 实现快速检索使用过的历史命令。Ctrl+r中r是retrieve中r。
Ctrl+a：光标回到命令行首。 （a：ahead）
Ctrl+e：光标回到命令行尾。 （e：end）
ctrl+w: 移除光标前的一个单词
Ctrl+k：删除光标处到行尾的字符。
Ctrl+u：删除整个命令行文本字符。
Ctrl+y:：粘贴Ctrl+u，Ctrl+k，Ctrl+w删除的文本。
Ctrl+d删除提示符后一个字符或exit或logout
ctrl+t: 交换光标位置前的两个字符
ctrl+y: 粘贴或者恢复上次的删
Esc+b 移动到当前单词的开头
Esc+f 移动到当前单词的结尾
Esc+t 颠倒光标所在处及其相邻单词的位置
ESC-c 使下一个单词首字母大写, 同时光标前进一个单词, 如光标停留在单词的某个    字母上, 如word中的o字母上, 则o字母变大写. 而不是w
ESC+u 使下一个单词所有字母变大写, 同时光标前进一个单词, 同上, 如光标在o字母上, 则ord变大写, w不变.
ESC+l 同ESC-U, 但使之全变为小写
esc+.  上一个命令的后面的参数
Ctrl+b：光标向行首移动一个字符。 （b：backwards）
Ctrl+ f：光标向行尾移动一个字符。 （f：forwards）
Ctrl+h：向行首删除一个字符。
Ctrl+d：向行尾删除一个字符。
Ctrl+p: 上一个使用的历史命令。 （p：previous）
Ctrl+n： 下一个使用的历史命令。（n：next ）
Ctrl+t： 交换光标所在字符和其前的字符。
Ctrl+i：相当于Tab键。
Ctrl+o：相当于Ctrl+m.
Ctrl+m：相当Enter键。
Ctrl+n相当于方向向下的方向键。
Ctrl+p相当于方向向上的方向键。
Ctrl+s:使终端发呆，静止，可以使快速输出的终端屏幕停下来。
Ctrl+q：退出Ctrl+s引起的发呆。
Ctrl+z：使正在运行在终端的任务，运行于后台。 （可用fg恢复）
Ctrl+c：中断终端中正在执行的任务。
Ctrl+d: 在空命令行的情况下可以退出终端。
Ctrl+[ ：相当于Esc键。
Esc键：连续按3次显示所有的支持的终端命令。
Tab键：命令、文件名等自动补全功能。
